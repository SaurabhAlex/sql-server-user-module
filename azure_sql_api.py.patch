def get_countries():
    conn = get_connection()
    cursor = conn.cursor()
    try:
        cursor.execute("SELECT id, name FROM countries")
        rows = cursor.fetchall()
        countries = [Country(id=row[0], name=row[1]) for row in rows]
        return countries
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error fetching countries: {str(e)}")
    finally:
        cursor.close()
        conn.close()
=======
@app.get("/countries", response_model=List[Country])
def get_countries():
    conn = get_connection()
    cursor = conn.cursor()
    try:
        cursor.execute("SELECT country_id, country_name FROM countries")
        rows = cursor.fetchall()
        countries = [Country(id=row[0], name=row[1]) for row in rows]
        return countries
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error fetching countries: {str(e)}")
    finally:
        cursor.close()
        conn.close()
>>>>>>> REPLACE

<<<<<<< SEARCH
@app.get("/states/{country_id}", response_model=List[State])
def get_states(country_id: int):
    conn = get_connection()
    cursor = conn.cursor()
    try:
        cursor.execute("SELECT id, name, country_id FROM states WHERE country_id = ?", country_id)
        rows = cursor.fetchall()
        states = [State(id=row[0], name=row[1], country_id=row[2]) for row in rows]
        return states
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error fetching states: {str(e)}")
    finally:
        cursor.close()
        conn.close()
=======
@app.get("/states/{country_id}", response_model=List[State])
def get_states(country_id: int):
    conn = get_connection()
    cursor = conn.cursor()
    try:
        cursor.execute("SELECT state_id, state_name, country_id FROM states WHERE country_id = ?", country_id)
        rows = cursor.fetchall()
        states = [State(id=row[0], name=row[1], country_id=row[2]) for row in rows]
        return states
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"Error fetching states: {str(e)}")
    finally:
        cursor.close()
        conn.close()
